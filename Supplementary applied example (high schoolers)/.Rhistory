size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
di_std = du %>% select(A, B, C)
# remove any completely missing observations
di_std = di_std %>% filter( !(is.na(A) & is.na(B) & is.na(C)) )
colMeans(is.na(di_std))
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A*C",
.coef.of.interest.dm = "A:C",
.form.string.du = "B1 ~ A1*C1",
.coef.of.interest.du = "A1:C1" )
##### try with more highly correlated variables and all are continuous?
# X2TXMTH & X3TGPAACAD: 0.59
# list them as A, B, C (EMM)
#analysis_vars = c("X2TXMTH", "X3TGPAACAD", "X1SES") # interaction is too weak to work well here
#analysis_vars = c("female", "X2TXMTH", "males_better_math") #*kinda works - SAVE
analysis_vars = c("female", "X3TGPAACAD", "males_better_math")
du = d2 %>% select(analysis_vars) %>% na.omit
names(du) = c("A1", "B1", "C1")
cor(du)
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
di_std = du %>% select(A, B, C)
# remove any completely missing observations
di_std = di_std %>% filter( !(is.na(A) & is.na(B) & is.na(C)) )
colMeans(is.na(di_std))
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A*C",
.coef.of.interest.dm = "A:C",
.form.string.du = "B1 ~ A1*C1",
.coef.of.interest.du = "A1:C1" )
analysis_vars = c("female", "X2TXMTH", "males_better_math")
du = d2 %>% select(analysis_vars) %>% na.omit
names(du) = c("A1", "B1", "C1")
cor(du)
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
di_std = du %>% select(A, B, C)
# remove any completely missing observations
di_std = di_std %>% filter( !(is.na(A) & is.na(B) & is.na(C)) )
colMeans(is.na(di_std))
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A*C",
.coef.of.interest.dm = "A:C",
.form.string.du = "B1 ~ A1*C1",
.coef.of.interest.du = "A1:C1" )
du %>% group_by(C1) %>%
summarise(mean(RC))
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(-0.2 + 2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
# will only work for binary C
du %>% group_by(C1) %>%
summarise(mean(RC))
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(-0.5 + 2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
# will only work for binary C
du %>% group_by(C1) %>%
summarise(mean(RC))
di_std = du %>% select(A, B, C)
# remove any completely missing observations
di_std = di_std %>% filter( !(is.na(A) & is.na(B) & is.na(C)) )
colMeans(is.na(di_std))
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A*C",
.coef.of.interest.dm = "A:C",
.form.string.du = "B1 ~ A1*C1",
.coef.of.interest.du = "A1:C1" )
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
# will only work for binary C
du %>% group_by(C1) %>%
summarise(mean(RC))
88/53
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A",
.coef.of.interest.dm = "A",
.form.string.du = "B1 ~ A1",
.coef.of.interest.du = "A1" )
impute_compare(.dm = di_std %>% select(A,B),
.du = du,
.form.string.dm = "B ~ A",
.coef.of.interest.dm = "A",
.form.string.du = "B1 ~ A1",
.coef.of.interest.du = "A1" )
# still using A,B,C in imputation model here
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A",
.coef.of.interest.dm = "A",
.form.string.du = "B1 ~ A1",
.coef.of.interest.du = "A1" )
# EEMM
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A*C",
.coef.of.interest.dm = "A:C",
.form.string.du = "B1 ~ A1*C1",
.coef.of.interest.du = "A1:C1" )
##### try with more highly correlated variables and all are continuous?
# X2TXMTH & X3TGPAACAD: 0.59
# list them as A, B, C (EMM)
#analysis_vars = c("X2TXMTH", "X3TGPAACAD", "X1SES") # interaction is too weak to work well here
analysis_vars = c("female", "X2TXMTH", "males_better_math") #*kinda works - SAVE
du = d2 %>% select(analysis_vars) %>% na.omit
names(du) = c("A1", "B1", "C1")
cor(du)
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
# will only work for binary C
du %>% group_by(C1) %>%
summarise(mean(RC))
di_std = du %>% select(A, B, C)
# remove any completely missing observations
di_std = di_std %>% filter( !(is.na(A) & is.na(B) & is.na(C)) )
colMeans(is.na(di_std))
# EEMM
#interaction is close to null in imputations
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A*C",
.coef.of.interest.dm = "A:C",
.form.string.du = "B1 ~ A1*C1",
.coef.of.interest.du = "A1:C1" )
du = d2 %>% select(analysis_vars) %>% na.omit
names(du) = c("A1", "B1", "C1")
cor(du)
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
# will only work for binary C
du %>% group_by(C1) %>%
summarise(mean(RC))
di_std = du %>% select(A, B, C)
# remove any completely missing observations
di_std = di_std %>% filter( !(is.na(A) & is.na(B) & is.na(C)) )
colMeans(is.na(di_std))
# EEMM
#interaction is close to null in imputations
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A*C",
.coef.of.interest.dm = "A:C",
.form.string.du = "B1 ~ A1*C1",
.coef.of.interest.du = "A1:C1" )
# remove any completely missing observations
di_ours = di_std %>% filter( !(is.na(A) & is.na(B) ) ) %>%
select(A,B)
dim(du)
dim(di_ours)
dim(di_std)
du = d2 %>% select(analysis_vars) %>% na.omit
names(du) = c("A1", "B1", "C1")
cor(du)
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0.2, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0.2, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
# will only work for binary C
du %>% group_by(C1) %>%
summarise(mean(RC))
di_std = du %>% select(A, B, C)
# remove any completely missing observations
di_std = di_std %>% filter( !(is.na(A) & is.na(B) & is.na(C)) )
dim(di_std)
dim(di_std); dim(du)
colMeans(is.na(di_std))
# EEMM
#interaction is close to null in imputations
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A*C",
.coef.of.interest.dm = "A:C",
.form.string.du = "B1 ~ A1*C1",
.coef.of.interest.du = "A1:C1" )
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0.1, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0.1, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
# will only work for binary C
du %>% group_by(C1) %>%
summarise(mean(RC))
di_std = du %>% select(A, B, C)
# remove any completely missing observations
di_std = di_std %>% filter( !(is.na(A) & is.na(B) & is.na(C)) )
dim(di_std); dim(du)
colMeans(is.na(di_std))
# EEMM
#interaction is close to null in imputations
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A*C",
.coef.of.interest.dm = "A:C",
.form.string.du = "B1 ~ A1*C1",
.coef.of.interest.du = "A1:C1" )
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0.1, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
# will only work for binary C
du %>% group_by(C1) %>%
summarise(mean(RC))
di_std = du %>% select(A, B, C)
# remove any completely missing observations
di_std = di_std %>% filter( !(is.na(A) & is.na(B) & is.na(C)) )
dim(di_std); dim(du)
colMeans(is.na(di_std))
dim(di_std); dim(du)
du = d2 %>% select(analysis_vars) %>% na.omit
names(du) = c("A1", "B1", "C1")
cor(du)
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0.9, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0.9, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
# will only work for binary C
du %>% group_by(C1) %>%
summarise(mean(RC))
di_std = du %>% select(A, B, C)
# remove any completely missing observations
di_std = di_std %>% filter( !(is.na(A) & is.na(B) & is.na(C)) )
dim(di_std); dim(du)
colMeans(is.na(di_std))
# EEMM
#interaction is close to null in imputations
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A*C",
.coef.of.interest.dm = "A:C",
.form.string.du = "B1 ~ A1*C1",
.coef.of.interest.du = "A1:C1" )
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
# will only work for binary C
du %>% group_by(C1) %>%
summarise(mean(RC))
di_std = du %>% select(A, B, C)
# remove any completely missing observations
di_std = di_std %>% filter( !(is.na(A) & is.na(B) & is.na(C)) )
dim(di_std); dim(du)
colMeans(is.na(di_std))
# EEMM
#interaction is close to null in imputations
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A*C",
.coef.of.interest.dm = "A:C",
.form.string.du = "B1 ~ A1*C1",
.coef.of.interest.du = "A1:C1" )
# straight from sim study, DAG 1K
du = du %>% rowwise() %>%
mutate(
RA = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RB = rbinom( n = 1,
prob = 0.5, # this variable is MCAR
size = 1 ),
RC = rbinom( n = 1,
prob = expit(2*C1),
size = 1 ),
A = ifelse(RA == 0, NA, A1),
B = ifelse(RB == 0, NA, B1),
C = ifelse(RC == 0, NA, C1) )
cor(du)
# will only work for binary C
du %>% group_by(C1) %>%
summarise(mean(RC))
di_std = du %>% select(A, B, C)
# remove any completely missing observations
di_std = di_std %>% filter( !(is.na(A) & is.na(B) & is.na(C)) )
dim(di_std); dim(du)
colMeans(is.na(di_std))
# EEMM
#interaction is close to null in imputations
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A*C",
.coef.of.interest.dm = "A:C",
.form.string.du = "B1 ~ A1*C1",
.coef.of.interest.du = "A1:C1" )
# remove any completely missing observations
di_ours = di_std %>% filter( !(is.na(A) & is.na(B) ) ) %>%
select(A,B)
dim(di_ours)
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A",
.coef.of.interest.dm = "A",
.form.string.du = "B1 ~ A1",
.coef.of.interest.du = "A1" )
impute_compare(.dm = di_std,
.du = du,
.form.string.dm = "B ~ A",
.coef.of.interest.dm = "A",
.form.string.du = "B1 ~ A1",
.coef.of.interest.du = "A1" )
di_ours = di_std %>% filter( !(is.na(A) & is.na(B) ) ) %>%
select(A,B)
dim(di_ours)
impute_compare(.dm = di_ours,
.du = du,
.form.string.dm = "B ~ A",
.coef.of.interest.dm = "A",
.form.string.du = "B1 ~ A1",
.coef.of.interest.du = "A1" )
table(d2$CASEID)
summary(d2$X1STATESAMPL)
table(d2$A1SCHTYPE)
table(d2$A1SCHCONTROL)
rm(list=ls())
# This script uses renv to preserve the R environment specs (e.g., package versions.)
library(renv)
# run this if you want to reproduce results using the R environment we had:
# renv::restore()
to.load = c("dplyr",
"data.table",
"purrr",
"tidyr",
"stringr",
"tibble",
"ggplot2",
"testthat",
"plotly",
"htmlwidgets", # for saving plotly
"here",
"haven",
"mice",
"gtsummary",
"tableone",
"Amelia")
# load within installation if needed
for (pkg in to.load) {
cat( paste("\nAbout to try loading package", pkg) )
tryCatch({
# eval below needed because library() will otherwise be confused
# https://www.mitchelloharawild.com/blog/loading-r-packages-in-a-loop/
eval( bquote( library( .(pkg) ) ) )
}, error = function(err) {
install.packages(pkg)
})
}
# run this only if you want to update the R environment specs
# renv::snapshot()
# get helper fns
setwd(code.dir)
